директория, содержащая информацию о репозиториях
/etc/yum.repos.d/
дополнительно можно просмотреть лог
#cat /var/log/yum.log

Проверка на доступные обновления
#yum check-update
список подключенных репозиториев
#yum repolist
информация об определенном репозитории
#yum repoinfo epel
информация о пакетах в указанном репозитории
#yum repo-pkgs epel list
удалить пакеты сохраненные в кэше
#yum clean packages
удалить все пакеты и метаданные
#yum clean all
создать кэш
#yum makecache
установить пакет
#yum install httpd
удаление пакета
установить из локальной директории (поиск/установка зависимостей будут произведены из подключенных репозиториев)
#yum localinstall httpd.rpm
или
#yum install httpd.rpm
установить с http
#yum localinstall http://server/repo/httpd.rpm
#yum remove httpd
обновить пакет
#yum update httpd
откатиться к предыдущей версии пакета
#yum downgrade
переустановка пакета (восстановление удаленных файлов)
#yum reinstall httpd
удаление ненужных более пакетов
#yum autoremove
обновить все пакеты
#yum update
обновить до определенной версии
#yum update-to
проверить локальную базу rpm (поддерживаются параметры dependencies, duplicates, obsoletes, provides)
#yum check
#yum check dependencies
список названий пакетов из репозиторий
#yum list
список всех доступных пакетов
#yum list available
список всех установленных пакетов
#yum list installed
установлен ли указанный пакет
#yum list installed httpd
список установленных и доступных пакетов
#yum list all
список пакетов, относящихся к ядру
#yum list kernel
отображение информации о пакете
#yum info httpd
список зависимостей и необходимых пакетов
#yum deplist httpd
найти пакет, который содержит файл
#yum provides "*bin/top"
поиск пакета по имени и описанию
#yum search httpd
получить информацию о доступных обновлениях безопасности
#yum updateinfo list security
вывести список групп
#yum grouplist
просмотр yum истории (вывод списка транзакций)
#yum history list
просмотр информации определенной транзакции (установленные пакеты, установленные зависимости)
#yum history info 9
отмена транзакции
#yum history undo 9
повторить
#yum history redo 9
Основной конфигурационный файл
/etc/yum.conf
создание локальных репозиториев (createrepo ставится отдельно)
#createrepo
включить отключенный репозиторий
#yum update -y --enablerepo=epel
отключить репозиторий
#yum update -y --disablerepo=epel

Выбор из какого репозитория ставить:
yum -y remove php
yum -y --enablerepo=remi-php70 install php70-php php70-php-pear php70-php-bcmath php70-php-pecl-jsond-devel php70-php-mysqlnd php70-php-gd php70-php-common php70-php-fpm php70-php-intl php70-php-cli php70-php php70-php-xml php70-php-opcache php70-php-pecl-apcu php70-php-pecl-jsond php70-php-pdo php70-php-gmp php70-php-process php70-php-pecl-imagick php70-php-devel php70-php-mbstring
rm -f /usr/bin/php
ln -s /usr/bin/php70 /usr/bin/php
service httpd restart
service php70-php-fpm start
Настрока репозитория актвного
dir:/etc/yum.repos.d/repolist_name
repolist_name:
enabled=1 - active


exim
imapsync

IMAP

telnet server imap
Если у нас соединение с сервером IMAP шифрованное (по SSL), то команда соединения будет следующей:
$ openssl s_client -crlf -ign_eof -connect mail-srv:993	
# openssl s_client -connect imap.server:993 -quiet

a login user pass
Далее смотрим список ящиков :
a2 LIST «» «*»
a list "" "*"
Запрашиваем у сервера статус папки Inbox
. status INBOX (messages)	
Выбираем папку Inbox
. select inbox
Даем команду серверу показать письмо № 7
. fetch 7 full	
Даем команду серверу показать тело письма № 7
. fetch 7 rfc822.text
a4 FETCH 1 BODY[]
Далее можем просмотреть список входящих писем и увидеть непрочитанные
a3 EXAMINE INBOX
a logout


SMTP
$ telnet localhost 25
-1> helo localhost
или
-1> ehlo localhost
Если нужна авторизация на сервере — вводим эту строку.
-1.1>auth login
Получаем ответ от сервера
334 VXNlcm5hbWU6
Вводим наш логин в формате base64, который мы получили и запомнили выше
bXlfbG9naW4K
Получаем ответ от сервера
334 UGFzc3dvcmQ6
Вводим наш пароль в формате base64, который мы получили и запомнили выше
bXlfcGFzc3dvcmQK
-1.2>pass
-2> mail from: <root@exim.teachers>
-3> rcpt to: <test@exim.teachers>
-4> data
-4.1>subject: test telnet auth
-5> test
-6> .
-7> quit

POP3

exim# telnet localhost 110
-1> user test@exim.teachers
-2> pass pass
-3> list
+OK POP3 clients that break here, they violate STD53.
1 1953
2 337
.
-4> retr 1
-5> quit


user2.txt
пустая строка
user1;pass1;user2;pass2;
user3;pass3;user4;pass4;
пустая строка

imapsync.sh
#!/bin/bash
FILE=/root/user2.txt
HOST1=mx.example.ru
HOST2=imap.yandex.ru
PORT1=143
PORT2=143
IFS=$'\n'
#Пример
#while read list
#    do
#        while IFS=$';' read u1 p1 u2 p2
#            do echo "$u1=$p1 and $u2=$p2"
#        done
#done < $FILE

while IFS=$';' read U1 P1 U2 P2
#    do echo "$U1 = $P1 and $U2 = $P2"
do
imapsync \
   --host1 $HOST1 --port1 $PORT1 --user1 $U1@example.ru  --password1 $P1  \
   --host2 $HOST2 --port2 $PORT2 --user2 $U2@yandex.ru  --password2 $P2 
done < $FILE


Вариант в ручную:
imapsync \
   --host1 mx.example.ru --port1 143 --user1 user@example.ru  --password1 "Pass123"  \
   --host2 imap.yandex.ru --port2 143 --user2 user@yandex.ru  --password2 "Pass123" 
imapsync \
   --host1 mx.example.ru --port1 143 --user3 user@example.ru  --password1 "Pass123"  \
   --host2 imap.yandex.ru --port2 143 --user4 user@yandex.ru  --password2 "Pass123" 



hostnamectl status
hostnamectl set-hostname client.itzgeek.com
systemctl restart systemd-hostnamedyum

bash
работа в цикле с пользователями из файла (user1;pass1;user2;pass2;)
#!/bin/bash
FILE=/root/user2.txt
IFS=$'\n'
while read list
    do
        while IFS=$';' read u1 p1 u2 p2
            do echo "$u1=$p1 and $u2=$p2"
        done
done < $FILE

vi
exim


Поиск по файла по тексту
grep -iRI "Some text" /path

#########
#FTP
#########

#pure-ftp
#pure-ftp.conf
======================================
ChrootEveryone              yes
CreateHomeDir			yes
MaxClientsNumber            50
Daemonize                   yes
MaxClientsPerIP             8
VerboseLog                  yes
DisplayDotFiles             yes
AnonymousOnly               no
NoAnonymous                 yes
SyslogFacility              ftp
DontResolve                 yes
MaxIdleTime                 15
PureDB                        /etc/pure-ftpd/pureftpd.pdb
LimitRecursion              10000 8
AnonymousCanCreateDirs      no
MaxLoad                     4
 PassivePortRange          30000 50000
AntiWarez                   yes
Umask                       133:022
MinUID                      1000
UseFtpUsers no
AllowUserFXP                no
AllowAnonymousFXP           no
ProhibitDotFilesWrite       no
ProhibitDotFilesRead        no
AutoRename                  no
AnonymousCantUpload         yes
AltLog                     clf:/var/log/pureftpd.log
#PIDFile                     /var/run/pure-ftpd.pid
MaxDiskUsage               99
CustomerProof              yes
# TLS                      1
# TLSCipherSuite           HIGH
# Certificate file, for TLS
# CertFile                 /etc/ssl/private/pure-ftpd.pem
# IPV4Only                 yes
# IPV6Only                 yes
======================================
#users
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser

Теперь можно добавить виртуального пользователя:
pure-pw useradd remote -u ftpuser -g ftpgroup -d /home/pubftp/remote -N 10

Где remote — имя пользователя для доступа к FTP,
а /home/pubftp/remote — персональная директория,\
с которой он будет работать. -N 10 задает квоту в 10МБ
(ограничение на использование дискового пространства).
Эту директорию не нужно создавать вручную, т.к. она появится автоматически 
(параметр задается при конфигурировании, об этом чуть позже)
 при первом подключении и обмене данными с сервером.

Так же после первого выполнения этой команды создается файл,
который будет хранить данные для доступа пользователей.
======================================
#help to add access for different folders
ChrootEveryone              yes
!!! local user must have UID>1000
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
/home/siteuser
1.add local user
--------------------------------------
useradd -d /home/siteuser -s /bin/bash siteuser
useradd -d /home/devuser -s /bin/bash devuser
--------------------------------------
/etc/passwd
ftpuser:x:1001:1001::/dev/null:/etc
devuser:x:1002:1002::/home/devuser:/bin/bash
siteuser:x:1003:1003::/home/siteuser:/bin/bash

2.add this user to local group
--------------------------------------
groupadd bitrix
usermod -a -G bitrix devuser
usermod -a -G bitrix siteuser
groups bitrix
--------------------------------------
/etc/group
bitrix:x:600:devuser,siteuser
ftpgroup:x:1001

3.add rights go the group on resurce
--------------------------------------
chown -R bitrix:bitrix /home/bitrix/
chmod rwx+g bitrix
--------------------------------------
/home/bitrix/
drwxrwx---   6 bitrix   bitrix   4096 Июл 14 23:10 bitrix
/home/bitrix/www
drwxrwx---  39 bitrix bitrix 12288 Июл 17 12:24 www
/home/bitrix/ext_www
drwxrwxr-x   3 bitrix bitrix  4096 Июл 14 17:17 ext_www

4.add pure-pw useradd
--------------------------------------
pure-pw useradd site -u siteuser -g siteuser -d /home/pubftp/site
pure-pw useradd dev -u devuser -g devuser -d /home/pubftp/dev
pure-pw mkdb
--------------------------------------
/etc/pureftpd/pureftpd.passwd
dev:passwd:1002:1002::/home/pubftp/dev/./::::::::::::
site:passwd:1003:1003::/home//pubftp/site/./::::::::::::

5.config access for the resurce in pureftpd.passwd like HOME_DIR
--------------------------------------
vi /etc/pureftpd/pureftpd.passwd
--------------------------------------
/etc/pureftpd/pureftpd.passwd
dev:passwd:1002:1002::/home/bitrix/ext_www/./::::::::::::
site:passwd:1003:1003::/home/bitrix/www/./::::::::::::
======================================
#commands
yum install pure-ftpd
more /var/log/messages | grep pure-ftpd
tailf /var/log/pureftpd.log
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd remote -u ftpuser -g ftpgroup -d /home/pubftp/remote -N 10
pure-pw mkdb
pure-pw passwd remote
pure-pw list
pure-pw show remote
pure-pw userdel remote
#urls
======================================
http://cisu.blogspot.com/2013/01/pure-ftpd-debian.html
http://blogpmenier.dynalias.net/docext/pureftpd/pure-ftpd.conf


﻿################
#Firewalld
################
-------------------------------------------------------------------------------------------
# systemctl status firewalld
# firewall-cmd --state
# systemctl start firewalld
# systemctl enable firewalld
# systemctl disable firewalld
# systemctl stop firewalld

# yum install iptables-services
# systemctl start iptables
# systemctl start ip6tables
# systemctl enable iptables
# systemctl enable ip6tables
# /sbin/iptables-save > /etc/sysconfig/iptables
# /sbin/ip6tables-save > /etc/sysconfig/ip6tables

Или по-старинке:
# service iptables save
Текущие правила находятся в файлах:
/etc/sysconfig/iptables
/etc/sysconfig/ip6tables

Перезапуск iptables (например, после совершения каких-либо изменений):
# systemctl restart iptables.service
---------------------------------------------------------------------------------------------------
firewalld хранит свои настройки в XML файлах раскидав их по /usr/lib/firewalld/ и /etc/firewalld/
---------------------------------------------------------------------------------------------------

    drop – как и следовало ожидать входящие сетевые пакеты сбрасываются, без ответа, допускаются только исходящие соединения
    block – входящие сетевые соединения отклоняются с сообщением icmp-host-prohibited для Ipv4 и icmp6-adm-prohibited для IPv6
	    допускаются только сетевые соединения инициированные внутри нашей системы.
    public – разрешается устанавливать только конкретные входящие соединения.
    external – для использования во внешних сетях с разрешенным маскарадингом, особенно для роутеров,
	       разрешается устанавливать только конкретные входящие соединения
    dmz – для компьютеров собственной демилитаризованной зоне с ограниченным доступом к вашей внутренней сети,
	  разрешается устанавливать только конкретные входящие соединения.
    work/home/internal – Для всех трёх зон в описании примерно та же вода, плюс:
	максимальное доверие к компьютерам, уверенность в том, что они не причинят вреда нашему компьютеру,
	разрешается устанавливать только конкретные входящие соединения
    trusted – Специальная зона, где все сетевые соединения разрешены.

-------------------------------------------------------------------------------------------
#firewall-cmd --zone=[нужная_зона] --add-port=5280/tcp --permanent
#firewall-cmd --reload
-------------------------------------------------------------------------------------------
[--zone=нужная_зона] --list-services 	Просмотреть список сервисов в зоне
[--zone=нужная_зона] --list-ports 	Просмотреть список портов в зоне
--permanent 	объявить вносимые изменеия постоянными
--state  	 узнать состояние FirewallD
 --reload 	 перезагрузить FirewallD
 --get-zones 	 вывести список всех заданных зон
 --get-services 	 список всех поддерживаемых служб
--get-active-zones 	список всех активных зон
[--zone=нужная_зона] --add-interface=интерфейс 	добавить интерфейс к зоне
[--zone=нужная_зона] --change-interface= интерфейс 	изменить интерфейс
[--zone=нужная_зона] --remove-interface= интерфейс 	удалить интерфейс из зоны
--panic-on 	режим паники, блокирующий все сетевые соединения
--panic-off  	отмена режима паники
[--zone=нужная_зона] --add-service=нужный_сервис [--timeout=] 	добавить службу к зоне
[--zone=нужная_зона] --remove-service= нужный_сервис [--timeout=] 	- удалить службу из зоны
[--zone=нужная_зона] --add-port=[-]/ [--timeout=]       	добавить порт к зоне
[--zone=нужная_зона] --remove-port=[-]/ [--timeout=]  	удалить порт из зоны
[--zone=нужная_зона] --add-masquerade 	добавить маскарадинг к зоне
[--zone=нужная_зона] --remove-masquerade   	удалить маскарадинг
[--zone=нужная_зона] --add-forward-port=port=[-]:proto= { :toport=[-] | :toaddr=| :toport=[-]:toaddr=} 	добавить проброс портов к зоне
[--zone=нужная_зона] --remove-forward-port=port=[-]:proto= { :toport=[-] | :toaddr=| :toport=[-]:toaddr=} 	удалить проброс портов из зон
-------------------------------------------------------------------------------------------
Пример: разрешаем ssh на нестандартном порте

# firewall-cmd --permanent --zone=public --add-port=2234/tcp
# firewall-cmd --reload
# firewall-cmd --zone=public --list-ports
2234/tcp
# nano /etc/ssh/sshd_config
...
port 2234
# systemctl restart sshd.service
# yum provides semanage
# yum install policycoreutils-python
# semanage port -a -t ssh_port_t -p tcp 2234
# firewall-cmd --permanent --zone=public --remove-service=ssh
# firewall-cmd --reload
# firewall-cmd --list-all
-------------------------------------------------------------------------------------------
# firewall-cmd --permanent --zone=public --remove-service=dhcpv6-client
-------------------------------------------------------------------------------------------
# firewall-cmd --zone=public --permanent --add-interface=em1
-------------------------------------------------------------------------------------------
# firewall-cmd --zone=public --add-port=5059-5061/udp
-------------------------------------------------------------------------------------------
Маскарад (masquerade, он же nat, он же...):

# firewall-cmd --zone=external --query-masquerade
# firewall-cmd --zone=external --add-masquerade
# firewall-cmd --zone=external --add-forward-port=port=22:proto=tcp:toaddr=192.168.1.23
# firewall-cmd --zone=external --add-forward-port=port=22:proto=tcp:toport=2055:toaddr=192.168.1.23
-------------------------------------------------------------------------------------------
--------------------------------------
Forward ports and servers
--------------------------------------
firewall-cmd --list-all
firewall-cmd --zone=external --add-interface=eth0
firewall-cmd --zone=external --add-service=ssh --permanent 
firewall-cmd --zone=external --query-masquerade
firewall-cmd --zone=external --add-forward-port=port=3389:proto=tcp:toport=3389:toaddr=194.54.80.222 --permanent
firewall-cmd --zone=external --remove-forward-port=port=3389:proto=tcp:toport=3389:toaddr=194.54.80.222 --permanent
firewall-cmd --reload
firewall-cmd --zone=external --list-forward-ports
--------------------------------------
-------------------------------------------------------------------------------------------

firewall-cmd
-------------------------------------------------------------------------------------------
Постоянные параметры:

Постоянные параметры будут хранится в настройках и не исчезнут после перезагрузки. Так же их изменение вступят в силу только после перезагрузки или перезапуска системы.(Ключевое слово тут --permanent) Можно использовать:

    --permanent { --get-zones | --get-services | --get-icmptypes }
    --permanent [--zone=<zone>] { --list-services | --list-ports | --list-icmp-blocks | --list-forward-ports }
    --permanent [--zone=<zone>] { --add-ACTION | --remove-ACTION | --query-ACTION }
    --permanent [--zone=<zone>] { --add-masquerade | --remove-masquerade |--query-masquerade }

Результат такой же как и при использовании временных параметров, только постоянный. :)
-------------------------------------------------------------------------------------------
Проверка статуса:
    --state — Проверяет активен ли демон firewalld.
-------------------------------------------------------------------------------------------
Перезагрузка:
    --reload - Перезагружает правила межсетевого экрана с сохранением информации о состоянии.
    --complete-reload — Полностью перезагружает межсетевой экран, в том числе перезагружает модули ядра (netfilter). Все соединения будут сброшены и временные правила потеряны.
-------------------------------------------------------------------------------------------
Паника (внештатный режим):
    --panic-on — Включае режим паники. Все входящие и исходящие пакеты без исключения отбрасываются, все соединения со временем разрываются.
    --panic-off — Отключить режим паники. Брэндмауер начинает работать в штатном режиме, некоторые соединения могут быть восстановлены, если режим паники длился меньше время окончания для этих соединений.
    --query-panic — Возвращает 0 если режим паники включен и 1 если выключен.
-------------------------------------------------------------------------------------------
Опции обработки зон:

    --get-default-zone — Возвращает зону по умолчанию для соединений и интерфейсов.
    --set-default-zone=<zone> - Устанавливает зону по умолчанию для соединений и интерфейсов (Для которых зона не была установлена). Это постоянные изменения.
    --get-zones — Возвращает предопределенных зон служб используя пробелы в качестве разделителя.
    --get-services — Возвращает список стандартных служб используя пробелы в качестве разделителя.
    --get-icmptypes - Возвращает список предопределенных типов ICMP используя пробелы в качестве разделителя
    --get-active-zones — Возвращает список активных в настоящее время зон вместе с интерфейсами в этих зонах в формате:
    <zone1>: <interface1> <interface2> ..
    <zone2>: <interface3> ..
    --get-zone-of-interface=<interface> - Возвращает зону которой пренадлежит интерфейс <interface> или ничего, если интерфейсу не назначена зона.
    --list-all-zones — Возвращает список всех действий во всех зонах в формате:
    <zone>
    interfaces: <interface1> ..
    services: <service1> ..
    ports: <port1> ..
    forward-ports: <forward port1> ..
    icmp-blocks: <icmp type1> ..

-------------------------------------------------------------------------------------------
Опции обработки интерфейсов:

Эти опции относятся только к одной конкретной зоне. Если используется --zone=<zone>, то они влияют на зону <zone>. Если нет, то опции влияют на зону «по умолчанию» (смотрите --get-default-zone).

[--zone=<zone>] --list-interfaces — Возвращает список интерфейсов которые пренадлежат к зоне <zone>. Если параметра нет, то используется зона «по умолчанию». 
[--zone=<zone>] --add-interface=<interface> - Добавляет интерфейс <interface> в зону <zone>.

[--zone=<zone>] { --change-interface=<interface> | --change --zone=<interface> } - Изменить зону интерфейса <interface> принадлежащего зоне <zone>.
Если старая и новая зона совпадают то команда ничего не делает и не возвращает ошибки. Если интерфейс не принадлежал ранее к этой зоне то он будет в неё добавлен, как при использовании параметра --add-interface.

[--zone=<zone>]--query-interface=<interface> - Возвращает 0 если интерфейс <interface> принадлежит к зоне <zone> и 1 если не пренадлежит.

[--zone=<zone>]--remove-interface=<interface> - Удаляет интерфейс<interface> из зоны <zone>.


-------------------------------------------------------------------------------------------
Опции настройки и запроса зон:

Чтобы использовать эти параметры следует знать какие действия и когда можно использовать. Об этом написано ниже.

    [--zone=<zone>] --add-ACTION [--timeout=<seconds>] - Добавить действие ACTION для зоны <zone>. Эта опция может быть указана несколько раз. Чтобы получить зону по умолчанию используется --get-default-zone. Если указан тайм-аут то действие ACTION будет активно указанное количество секунд и затем удалено.

    [--zone=<zone>] --remove-ACTION - Удалить действие ACTION из зоны <zone>. Эта опция может быть указан несколько раз. Если действие было добавлено с указанием тайм-аута, оно всё равно будет удалено.

    [--zone=<zone>] --query-ACTION — Возвращает 0 если действие ACTION было добавлено для зоны <zone> и 1 в противном случае.

    [--zone=<zone>] --add-masquerade [--timeout=<seconds>] - Включить маскарад для зоны <zone>. Если указан тайм-аут, маскарадинг будет активным в течение указанного количества секунд.

    [--zone=<zone>] --remove-masquerade - Отключить маскарад для зоны <zone>. Если маскарадинг был включен с тайм-аут, он всё равно будет отключен.

    [--zone=<zone>] --query-masquerade — Возвращает 0 если маскарадинг включен для зоны <zone> и 1 в противном случае.

    [--zone=<zone>] --list-services — Возвращает список сервисов добавлены в зону <zone> разделенный пробелами. Чтобы получить список всех предустановленных сервисов используйте --get-services.

    [--zone=<zone>] --list-ports— Возвращает список портов добавленных в зону <zone> разделённый пробелами. Списрок имеет формат: <port>[-<port>]/<protocol>, где в качестве порта может быть указан диапазон портов.

    [--zone=<zone>]--list-icmp-blocks - Список типов ICMP пакетов добавлнных в зону <zone> разделенный пробелами. Для получения списка всех предопределенных типов ICMP используйте --get-icmptypes.

    [--zone=<zone>] --list-forward-ports — Возвращает список всех «проброшенных» портов добавленных в зону <zone>.
    [--zone=<zone>] --list-all - Возвращает список всех действий добавленных или включенных в зону <zone>.

-------------------------------------------------------------------------------------------
Эти действия (ACTION) используются в --add-ACTION, --remove-ACTION и --query-ACTION предыдущего раздела.

    service=<service> - Использовать одну из стандартных служб. Для получения списка всех стандартных служб используйте --get-services.

    port=<port>[-<port>]/<protocol> - Использовать порт <port> или диапазон портов <port>-<port> для работы протоколы. Порт - это номер порта от 1 до 65535. Протокол может быть TCP или UDP.

    icmp-block=<icmptype> - .Использовать предопределенные типы ICMP пакетов. Для получения списка всех предопределенных типов ICMP используйте --get-icmptypes.

    forward-port=port=<port>[-<port>]:proto=<protocol>:toport=<port>[-<port>] - Использовать порт при переадресации пакетов. Указываются исходный и целевой 
порты или диапазоны портов для протокола. Протоколом может быть UDP или TCP. Проброс осуществляется с локального порта port на локальный toport.

    forward-port=port=<port>[-<port>]:proto=<protocol>:toaddr=<address> - Проброс локального порта port в тот же порт на хосте toaddr.

    forward-port=port=<port>[-<port>]:proto=<protocol>:toport=<port>[-<port>]:toaddr=<address> - Проброс локального порта port в порт toport на хосте toaddr.

Ещё опции:

-------------------------------------------------------------------------------------------
Эти опции служат для управления правилами на более низком уровне.

    --direct--passthrough { ipv4 | ipv6 | eb } <args> - Передача команд через фаервол. Аргументом <args> могут быть любые агрументы командной строки допрустимые в iptables, ip6tables и ebtables.

    --direct--add-chain { ipv4 | ipv6 | eb } <table> <chain> - Добавить новую цепочку <chain> в таблицу <table>.

    --direct--remove-chain { ipv4 | ipv6 | eb } <table> <chain> - Удалить цепочку <chain> из таблицы <table>.

    --direct--query-chain { ipv4 | ipv6 | eb } <table> <chain> - Возвращает 0 если цепочка с именем <chain> присутствует в таблице <table> и 1 в противном случае.

    --direct--get-chains { ipv4 | ipv6 | eb } <table> - Возвращает все цепочки содержащиеся в таблице <table> в виде списка разделенного пробелами.

    --direct--add-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args> - Добавить правило <args> в цепочку <chain> таблицы <table>.Приоритет используется для задания позиции правила в цепи. Правило с приоритетом 0 добавляется на самый верх цепи. Чем больше приоритет, тем ниже правило расположено в цепочке. Порядок расположения правил с одинаковым приоритетом может менятся и поэтому не предсказуем. Не стоит назначать одинаковый приоритет правилам.

    --direct--remove-rule { ipv4 | ipv6 | eb } <table> <chain> <args> -Удалить правило <args> из цепочки <chain> в таблице <table>.

    --direct--query-rule { ipv4 | ipv6 | eb } <table> <chain> <args> - Возвращает 0 если правило <args> существует в цепочке <chain> таблицы <table> и 1 в противном случае.

    --direct--get-rules { ipv4 | ipv6 | eb } <table> <chain> - Возвращает все правила цепочки <chain> в таблице <table> в виде строк.
-------------------------------------------------------------------------------------------


############
#ПОИСК
#FIND
############
1. искать файлы или директорию начиная с / (можно добавить тильду, вот так ~/ и это укажет на домашний каталог)
find / -name file1
2. искать файлы и директории относящиеся к user1
find / -user user1
3. искать файлы с расширением .bin в директории /home/user1
find /home/user1 -name \*.bin
4. искать бинарные файлы, которые не запускались 100 дней
find /usr/bin -type f -atime +100
5. найти файлы созданные или изменённые за 10 дней
find /usr/bin -type f -mtime -10
6. найти файлы с расширением .deb и изменить права доступа (будьте внимательны с этой командой)
find / -name \*.deb -exec chmod 755 '{}' \;
7. найти файлы с расширением .ps
locate \*.ps
8. показать путь к указанной программе, в данном случае halt
whereis halt
9. показать полный путь к указанной программе, в данном случае halt
which halt

В каком файле есть запись вида "apc.so"
grep -r apc.so /etc/php*

Поиск и замена
sed -i 's/CHARSET=latin1/CHARSET=utf8/g' /home/admin/admin_backups/utf8/medtehnika_b.sql

############
#PHP
############
Проверка сессии
#php70 -S 0.0.0.0:8000
PHP 7.0.21 Development Server started at Thu Jul 27 13:11:35 2017
Listening on http://0.0.0.0:8000
Document root is /home/nextcloud/www

modules
php70 -m


Если не авторизуется нет доступа к записи сессии:
mcedit /etc/opt/remi/php70/php-fpm.d/www.conf
php_value[session.save_path]    = /tmp


#############
#MYSQL
#############
---------------------------------------------------------------
MySql_5.5
---------------------------------------------------------------
mysql -uroot -ppassword
---------------------------------------------------------------
mysql> CREATE USER 'jeffrey'@'localhost' IDENTIFIED BY 'mypass';
mysql> SET PASSWORD FOR 'jeffrey'@'localhost' = PASSWORD('mypass');
mysql> SET PASSWORD = PASSWORD('mypass');
mysql> GRANT USAGE ON *.* TO 'jeffrey'@'localhost' IDENTIFIED BY 'mypass';
shell> mysqladmin -u user_name -h host_name password "new_password"
---------------------------------------------------------------
mysql> CREATE USER 'finley'@'localhost' IDENTIFIED BY 'some_pass';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'finley'@'localhost' WITH GRANT OPTION;
mysql> CREATE USER 'finley'@'%' IDENTIFIED BY 'some_pass';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'finley'@'%' WITH GRANT OPTION;
mysql> CREATE USER 'admin'@'localhost' IDENTIFIED BY 'admin_pass';
mysql> GRANT RELOAD,PROCESS ON *.* TO 'admin'@'localhost';
mysql> CREATE USER 'dummy'@'localhost';
---------------------------------------------------------------
mysql> SHOW GRANTS FOR 'admin'@'localhost';
---------------------------------------------------------------
mysql> CREATE USER 'custom'@'localhost' IDENTIFIED BY 'obscure';
mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP ON bankaccount.* TO 'custom'@'localhost';
mysql> CREATE USER 'custom'@'host47.example.com' IDENTIFIED BY 'obscure';
mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP ON expenses.* TO 'custom'@'host47.example.com';
mysql> CREATE USER 'custom'@'%.example.com' IDENTIFIED BY 'obscure';
mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP ON customer.* TO 'custom'@'%.example.com';
---------------------------------------------------------------
mysql> REVOKE ALL ON dbname.* FROM 'user'@'localhost';
---------------------------------------------------------------
mysql> DROP USER 'jeffrey'@'localhost';
---------------------------------------------------------------
mysql> SELECT USER(), CURRENT_USER();
---------------------------------------------------------------
mysql> RENAME USER ''@'localhost' TO 'user1'@'localhost';
mysql> RENAME USER 'user2'@'%.example.com' TO 'user2'@'remote.example.com';
---------------------------------------------------------------
mysql> FLUSH PRIVILEGES;
---------------------------------------------------------------
mysql> SHOW DATABASES;
---------------------------------------------------------------
mysql> SHOW TABLES;
---------------------------------------------------------------
mysql> SHOW GLOBAL STATUS;
---------------------------------------------------------------
mysqldump -u root -p dbname > dump.sql
---------------------------------------------------------------
--add-drop-table - добавляет команду DROP TABLE перед каждой командой CREATE TABLE
--add-locks - добавляет команду LOCK TABLES перед выполнением и UNLOCK TABLE после выполнения каждого дампа таблицы
--no-create-db, -n - не добавлять команду CREATE DATABASE, которая добавляется при использовании параметров --databases и --all-databases
--no-data, -d - дампить только структуру таблиц
--no-create-info, -t - не создавать команду CREATE TABLE
--skip-comments - не выводить комментарии.
--compact - использовать компактный формат
--create-options - добавляет дополнительную информацию о таблице в команду CREATE TABLE: тип, значение AUTO_INCREMENT и т.д. Не нужные опции можно вырезать с помощью sed.
--extended-insert, -e - применение команды INSERT с многострочным синтаксисом (повышает компактность и быстродействие операторов ввода)
--tables - дампить только таблицы из списка, следующего за этим параметром, разделитель - пробел
---------------------------------------------------------------
mysql -uroot -p dbname1 < dump.sql
---------------------------------------------------------------
===========================
Смена пароля
===========================
Себе
mysql>SET PASSWORD = PASSWORD('пароль')
Пользователю
mysql>  SET PASSWORD FOR логин@localhost = PASSWORD('пароль');
mysql>  SET PASSWORD FOR логин@"%" = PASSWORD('пароль');
или
mysql>  UPDATE mysql.user SET Password=PASSWORD('пароль') WHERE User='логин' AND Host='localhost';
mysql>  FLUSH PRIVILEGES;
mysql>  SHOW GRANTS FOR 'admin_db'@'localhost';
mysql>  SHOW GRANTS FOR 'admin_db'@'%';

---------------------------------------------------------------
===========================
Перекодировка Charset:
===========================
Поиск текста в файле и замена
Дамп для конвертирования
1. mysqldump
Конвертирование
2. sed -i 's/CHARSET=cp1251/CHARSET=utf8/g' /home/admin/admin_backups/utf8/medtehnika_dev.sql 
   sed -i 's/CHARSET=cp1251/CHARSET=utf8/g' /home/admin/admin_backups/utf8/medtehnika_b.sql 
   sed -i 's/CHARSET=latin1/CHARSET=utf8/g' /home/admin/admin_backups/utf8/medtehnika_b.sql 
Тестовое восстановление
3. mysql -u da_admin -p aaa < /home/admin/admin_backups/utf8/medtehnika_dev.sql 
   mysql -u da_admin -p aaa < /home/admin/admin_backups/utf8/medtehnika_b.sql 
Восстановление, можно через phpMyAdmin
4. mysql -u da_admin -p7S7L9tA7Du medtehnika_b < /home/admin/admin_backups/utf8/medtehnika_b.sql 
   mysql -u da_admin -p7S7L9tA7Du medtehnika_dev < /home/admin/admin_backups/utf8/medtehnika_dev.sql 
---------------------------------------------------------------
===========================
Восстановление root доступа
===========================
service mysqld stop
systemctl stop mariadb

mysqld_safe --skip-grant-tables &
mysql
mysql> UPDATE mysql.user SET Password=PASSWORD('secret') WHERE User='root';
mysql> FLUSH PRIVILEGES;
mysql> \q

systemctl start mariadb
service mysqld restart
---------------------------------------------------------------
======================================
Рекомендации настройки Сервера БД
======================================
Tunner for fast working mysql
perl ~/mysqltuner.pl
---------------------------------------------------------------
===============================================================
innodb bitrix
---------------------------------------------------------------
my.cnf
---------------------------------------------------------------
[mysqld]

skip-name-resolve	= 1
query_cache_size        = 64M
query_cache_type        = 2
join_buffer_size	= 8M
innodb_log_file_size	= 1G
#

max_connections         = 2048
query_cache_limit       = 8M
max_allowed_packet      = 128M

innodb_buffer_pool_size         = 8G
innodb_buffer_pool_instances    = 8
innodb_log_buffer_size          = 128M
innodb_file_per_table           = 1
innodb_flush_log_at_trx_commit  = 2
innodb_additional_mem_pool_size = 64M
innodb_flush_method             = O_DIRECT

transaction-isolation           =  READ-COMMITTED
max-heap-table-size             = 300M
tmp-table-size                  = 300M

key_buffer_size                 = 128M
sort_buffer_size                = 1M
read_buffer_size                = 1M
read_rnd_buffer_size            = 1M

thread_stack                    = 1M
thread_cache_size		= 32
table_open_cache		= 4096

[safe_mysqld]
err-log=/var/log/mysqld.log
open_files_limit=8192

[mysqldump]
quick
max_allowed_packet=16M

[client]
default-character-set=utf8
---------------------------------------------------------------
show variables like 'innodb_log_file_size';
mysql> SET GLOBAL innodb_fast_shutdown = 1;
# mv /var/lib/mysql/ib_logfile0 /var/lib/mysql/ib_logfile0.bak
# mv /var/lib/mysql/ib_logfile1 /var/lib/mysql/ib_logfile1.bak
---------------------------------------------------------------
===============================================================
---------------------------------------------------------------
####################
#phpMyAdmin_vesta
####################
/etc/phpMyAdmin.conf
/etc/httpd/conf.d/phpMyAdmin.conf
/etc/nginx/conf.d/phpMyAdmin.inc
/home/domainname/conf/web/shttp.conf
/home/domainname/conf/web/snginx.conf
php_admin_value open_basedir /usr/share/:/usr/share/phpMyAdmin:/usr/share/php:/usr/share/pear:/var/lib/phpMyAdmin:
php.ini
memory_limit=64M
/bar/log/httpd/domain/domain.name.error.log
---------------------------------------------------------------
##############
#GIT
##############
----------------------------------------------------------------------------------
    На Unix системах достаточно открыть терминал и перейти в нужную директорию.
----------------------------------------------------------------------------------
Клонирование репозитария
	git clone https://github.com/%user_login%/%repo_name%.git 
Переходим в свежесозданную папку репозитория и настраиваем его:
	git config user.name ivan.ivanov
	git config user.email ivanov@example.com
Статус	
	git status
После изменений
	git add %file_path%
Коммит
	git commit -m "%commit_message%"
История изменений
	git log или git log --name-only
Загрузка локальных изменений в удаленный репозиторий
	git push origin master.
Выполнение этой команды может закончиться с ошибкой, если в локально репозитории отсутствуют последние изменения, имеющиеся в удаленном репозитории.
Для решения этой проблемы надо выполнить команду git pull, которая скачает последние изменения из удаленного репозитория и смержит их с вашими локальными правками, после чего можно повторить команду 		git push
----------------------------------------------------------------------------------
cat .git/config
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "origin"]
	url = https://github.com/ara7788/Console.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[user]
	name = ara7788
	email = test3007@ya.ru
[credential]
        helper = cache --timeout=3600
[color]
        ui = true
----------------------------------------------------------------------------------
[alias]
    cd = checkout
    dir = branch
    mersq = merge --squash
    free = branch -D

----------------------------------------------------------------------------------
А теперь посмотрим что мы сделали:
Без модификаций

git pull --rebase
git branch
git checkout temp
git add -u
git commit
git merge master
git checkout master
git merge --squash temp
git commit
git push
git branch -D temp


С модификациями

git pull --rebase
git dir
git cd temp
git add -u
git commit
git merge master
git cd master
git mersq temp
git commit
git push
git free temp

----------------------------------------------------------------------------------
[commit]
        template = ~/.commit-template
----------------------------------------------------------------------------------
Префиксы для remote

Есть один трюк, который нередко используется разработчиками. Это префиксы для remote. 
Они позволяют сократить длину адреса к удаленному репозиторию.
Можно задать такие для read-only и push. Зачем? Это логично для open-source проектов.
Для уменшения нагрузки на сервер и скорости, лучше pull'ить из anongit (read-only) без использования SSH.
Что стоит у меня для KDE?

[url "http://anongit.kde.org/"]
    insteadOf = kde:
[url "git@git.kde.org:"]
    pushInsteadOf = kde:

Давайте разбираться. Тут мы настроили два URL для pull и push. Задали префикс kde.
Что это нам дает? Посмотрим на примере (в статье не указан префикс gh — для GitHub):
Без модификаций 	С модификациями

git clone http://anongit.kde.org/marble
git clone https://github.com/user/repository

git clone kde:marble
git clone gh:user/repository

----------------------------------------------------------------------------------

######################
#AUTOSTART LOAD SCRIPT
######################
----------------------------------------------------------------------------------
systemd
----------------------------------------------------------------------------------
Создаем файл нашей службы:

# touch /etc/systemd/system/routing-settings.service
# chmod 664 /etc/systemd/system/routing-settings.service

с таким содержимым:

[Unit]
Description=Routing Settings Service
After=network.target

[Service]
Type=oneshot
User=root
ExecStart=/root/routing.sh

[Install]
WantedBy=multi-user.target

# systemctl start routing-settings
# systemctl enable routing-settings
----------------------------------------------------------------------------------
SysV
----------------------------------------------------------------------------------
Создание скрипта в init.d
sudo chmod ugo+x /etc/init.d/имя_скрипта

Теперь добавите его в автозагрузку:
sudo rc-update add имя_скрипта defaults
----------------------------------------------------------------------------------
ИЛИ
----------------------------------------------------------------------------------
Создайте скрипт.
sudo nano /etc/rc.local
Пропишите ваш скрипт перед строчкой exit 0 и сохраните файл.
----------------------------------------------------------------------------------
Пример
# cat /etc/rc.local
#!/bin/sh -e
# rc.local
/usr/local/ispmgr/sbin/eximquota
/usr/local/ispmgr/sbin/ihttpd ip 1500
/root/antiddos/restorefw.sh
exit 0
----------------------------------------------------------------------------------
ИЛИ
----------------------------------------------------------------------------------
update-rc.d /path-to-script/script.sh defaults
update-rc.d -f имя remove
----------------------------------------------------------------------------------
Создать ссылки можно вручную, но проще это сделать через команду update-rc.d
Например:

sudo update-rc.d имя_сценария start 20 0 6 . stop 1 0 6 .

Точки важны (обе). Исследуя просторы интернета, у меня сложилось впечатление,
что синтаксис этой программы иногда меняется. Актуальные примеры можно посмотреть
по команде «man update-rc.d». Примеры будут в низу.

Эта команда создаст по 2 ссылки в каталогах /etc/rc0.d (второе число в команде) 
и /etc/rc6.d (третье число в команде). Причём вначале будет выполняться сценарий
 с параметром stop (т.к. стоит 1), а уже потом с параметром start (т.к. стоит 20).
Если второй параметр не нужен, то можно выполнить команду:

sudo update-rc.d имя_сценария stop 1 0 6 .

Советую ставить приоритет повыше (т.е. число после start или stop должно быть маленьким),
 желательно меньше 20. В обратном случае у меня иногда зависал компьютер при попытке перезагрузиться.

----------------------------------------------------------------------------------
#!/bin/bash

# chkconfig: 35 99 01
# description: Send system status
# processname: test_script

. /etc/rc.d/init.d/functions

username="around"
lock_file=/var/lock/test_script
log_datetime=`date -u +"%F %T"`

start(){
touch "$lock_file"
daemon --user=$username /usr/local/bin/python2.7 "/home/$username/test.py" "Service started at $log_datetime UTC" &>/dev/null &
}

stop(){
rm -f "$lock_file"
daemon --user=$username /usr/local/bin/python2.7 "/home/$username/test.py" "Service stopped at $log_datetime UTC" &>/dev/null &
}

case "$1" in
start)
start
;;
stop)
stop
;;
*)
echo $"Usage: $0 {start|stop}"
exit 2
esac
exit 0
----------------------------------------------------------------------------------
Настройки того, куда и с какими именами будут создаваться симлинки, задаются в строке "chkconfig: 35 99 01". Это означает, что скрипт будет актуален для запуска системы с уровнем 3 и 5, причем старт осуществлять после загрузки всех сервисов (99), а останавливать в первую очередь (01). Т.е. тебе туда надо chkconfig: 06 01 01

Запуск от имени пользователя осуществляется с помощью конструкции

daemon --user=$username
где "$username" - имя пользователя в системе, а "&>/dev/null" предотвращает вывод скрипта в консоль. Команда "daemon" и другие служебные функции находятся в файле "/etc/rc.d/init.d/functions", поэтому его мы импортируем в самом начале.

"lock_file" - служебный файл, который позволяет системе определять, запущен ли сервис и нужно ли его останавливать, запуская скрипт с параметром "stop" при выключении или презагрузке. Если его не создавать, то будет осуществляться только запуск скрипта, а если не удалять - то только остановка. Для системных сервисов такой файл создается автоматически, для пользовательских же его необходимо создать самостоятельно.

"log_datetime" - это строка даты и времени в UTC для передачи python-скрипту.
----------------------------------------------------------------------------------
chkconfig --add test_script
chkconfig --list test_script
----------------------------------------------------------------------------------
chmod +x /etc/init.d/script
chmod 775 /etc/init.d/script
chkconfig script on
systemctl start script
----------------------------------------------------------------------------------
#############
#PXE
#############
----------------------------------------------------------------------------------
Windows2008
----------------------------------------------------------------------------------
PXE
net use i: \\10.255.239.112

update
remotedesktop
firewall rdp 
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
######
#DNS
######
----------------------------------------------------------------------------------
PTR
dig -x 2001:67c:25dc:80::53b
----------------------------------------------------------------------------------
dig dolina-67c_25dc_80_53b.dolina.rx-name.net AAAA
----------------------------------------------------------------------------------
dig openstorekiev.com.ua any +trace
----------------------------------------------------------------------------------
Подробно dig
https://www.reg.ru/nettools/dig?domain
----------------------------------------------------------------------------------
Подробности регистрации
https://www.namecheap.com/domains/whois/results.aspx?domain=openstorekiev.com.ua
----------------------------------------------------------------------------------
whois site.com
----------------------------------------------------------------------------------
curl -v site.com
----------------------------------------------------------------------------------

----------------------------------------------------------------------------------

----------------------------------------------------------------------------------

----------------------------------------------------------------------------------

----------------------------------------------------------------------------------
#########
#SSL\TLS
#########
----------------------------------------------------------------------------------
Test
https://www.ssllabs.com/ssltest/analyze.html?d=vinsanto.com.ua
----------------------------------------------------------------------------------
Plesk
1.COMODORSADomainValidationSecureServerCA
2.COMODORSAAddTrustCA.crt
3.AddTrustExternalCARoot.crt
4.vinsanto_com_ua.crt
5.vinsanto.key
Vesta
Пример для весты в папке conf & Doc/vesta
----------------------------------------------------------------------------------
####
1C
####
----------------------------------------------------------------------------------
backup
http://www.handybackup.ru/handybackup-professional.shtml
----------------------------------------------------------------------------------
##########
#DATE/TIME
##########
----------------------------------------------------------------------------------
$ date
# hwclock -r
# hwclock --show --utc
----------------------------------------------------------------------------------
# date -s "2 OCT 2006 18:00:00"
# date --set="2 OCT 2006 18:00:00"
# date +%Y%m%d -s "20081128"
# date +%T -s "10:13:13"
Set the Hardware Clock to the current System Time
# hwclock --systohc
# hwclock -w
----------------------------------------------------------------------------------
timedatectl
# timedatectl set-time YYYY-MM-DD
$ sudo timedatectl set-time YYYY-MM-DD
# timedatectl set-time HH:MM:SS
# timedatectl set-time '10:42:43'
$ timedatectl list-timezones
$ timedatectl list-timezones | more
$ timedatectl list-timezones | grep -i asia
$ timedatectl list-timezones | grep America/New
# timedatectl set-ntp yes
----------------------------------------------------------------------------------
###########
#JPEG/Optim
###########
----------------------------------------------------------------------------------
find /путь/к/корневой/директории/сайта -type f -name '*.jpg' -exec jpegoptim {} --strip-all \;
----------------------------------------------------------------------------------
####################
#SCAN NETWORK 
####################
----------------------------------------------------------------------------------
https://nmap.org/man/ru/
https://ip-calculator.ru/#!ip=185.35.100.0/20
----------------------------------------------------------------------------------
1. Уточняем, можно ли это делать у владельца сети.
2. Считаем сеть https://ip-calculator.ru/ -> получаем диапазон
3. Запускаем Nmap https://nmap.org/man/ru/ c проверкой служб на 22,53,80,443,3389,8080 и тд -> Лог файл.
4. Парсим Лог.
5. Проверяем соответствие IP -> DNS именам.
6. Определяем дейтсвующие вебсайты, сервера unix, windows.
----------------------------------------------------------------------------------
nmap -v -A scanme.nmap.org
----------------------------------------------------------------------------------
Доролнение
1. Просканить порты на наличие открытых сервисов (суммарно)
2. На открытые 25 порты поузнавать заголовок сервера (смотреть на хост), то же с портами 22 и 21.
3. Пробить порты 80, 443 курлом - открытые спарсить на наличие HTML ссылок. Страницы 4xx тоже могут отдавать хостнейм.
4. получить PTR
5. взять списки доменов (конечно не только украинские), пройтись по каждому домену, взять часто используемые субдомены,
SRV (AD, DC, XMPP, автокофигурация почты и т.д.) и проверить вхождение в подсети WP.
6. еще есть сервисы где вбиваешь IP сервера - он показывает какие сайты на нем, но там обычно капча. 
----------------------------------------------------------------------------------
#############
#500
#############
Наиболее частой причиной ошибки 500 (Internal Server Error, внутренняя ошибка сервера)
является неверный синтаксис файла .htaccess или наличие в нем неподдерживаемых директив.
Чаще всего достаточно закомментировать директиву Options (для этого нужно поставить в
начале строки решетку — #), и проблема исчезнет.

Ошибка 500 также может возникать вследствие неправильного обращения с CGI-скриптами:

    CGI-скрипты должны иметь окончания строк в формате UNIX (\n), а не в формате Windows (\r\n).
 Для этого их надо загружать на сервер по FTP в режиме ASCII.

    CGI-скрипты и папки, в которых они находятся, должны быть доступны для записи только владельцу,
 то есть иметь права 0755 (drwxr-xr-x).

    В результате работы CGI-скрипта сформированы неправильные HTTP-заголовки ответа. 
В этом случае для решения проблемы полезно обратиться к error_log (его можно найти в контрольной панели в разделе «Хостинг / Статистика / Лог-файлы / Ошибки»).
#############
#502, 504
#############
nginx.conf
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    client_header_timeout       600;
    client_body_timeout    	600;
    keepalive_timeout 		400;

php.ini:
max_execution_time = 900

Повышение лимитов LVE Manager
----------------------------------------------------------------------------------
##############################
#SITE TIME UPLOAD DOWNLOAD
##############################
----------------------------------------------------------------------------------
https://tools.pingdom.com
----------------------------------------------------------------------------------
#####################
#MARK DOWN РАЗМЕТКА
#####################

http://dillinger.io/
----------------------------------------------------------------------------------
#####################
#SPAM, ANTIVIRUS 
#####################
----------------------------------------------------------------------------------
https://revisium.com/
https://revisium.com/ru/blog/ai-bolit-4-ISP.html
http://aleksius.com/joomla/zashchita-sajta/stranitsa-3
----------------------------------------------------------------------------------
Чтобы найти источник спам-рассылки на сайте, нужно в файле php.ini включить логирование рассылаемой почты директивами:
mail.add_x_header = On
mail.log = <путь до вашего пользовательского каталога>/phpmail.log

После включения данных опций в заголовок каждого письма, отправленного функцией mail(), будет добавляться строка вида
X-PHP-Originating-Script: <UID>:<имя скрипта>.php

Например,
X-PHP-Originating-Script: 33:ok.php

В случае спам-рассылки необходимо анализировать служебные заголовки рассылаемых писем и лог phpmail.log, в котором будут записи вида
mail() on [/var/www/vhosts/site.com/httpdocs/pages/modules/system/system.mail.inc:83]: To: smith@domain.co.uk -- Headers: MIME-Version: 1.0 Content-Type: text/plain; charset=UTF-8; format=flowed; delsp=yes Content-Transfer-Encoding: 8Bit X-Mailer: Drupal Sender: smith@domain.co.uk From: smith@domain.co.uk

Так вы сможете легко найти скрипт, рассылающий спам, и удалить его.
Если ваш сайт или эккаунт на хостинге уже заблокировали за рассылку спама, запросите в техподдержке хостинга для анализа 

    логи почтового сервера за день рассылки
    логи веб-сервера (access_log) за день рассылки
    образцы писем из спам-рассылки (нужны служебные заголовки писем)

Далее в ходе анализа возможны два варианта:

    В заголовке спам-письма будет строка X-PHP-Originating-Script. В этом случае вы знаете, через какой скрипт была выполнена рассылка.
    Строка X-PHP-Originating-Script в служебном заголовке отсутствует. В этом случае нужно сопоставить дату и время отправки писем (ее можно узнать из служебного заголовка письма) с логами веб-сервера (access_log). Скорее всего в access_log в то же самое время будет обращение к скрипту методом POST. Этот скрипт будет источником спама.  

После удаления спам-рассыльщика рекомендуем просканировать сайт на наличие других вредоносных скриптов (бэкдоров или хакерских шеллов), так как обычно взлом сайта не ограничивается размещением только одного скрипта, рассылающего спам. Сайт можно проверить бесплатным сканером AI-BOLIT. Если у вас не получается сделать это самостоятельно, обратитесь к профессионалам.
----------------------------------------------------------------------------------
nginx,apache,h2o,mysql,proftpd,ssl,sphinx,php5.4_7,alternatives,update-alternatives
----------------------------------------------------------------------------------
restore_passwd,uid,gid,stickibitk,selinux,aparmorecron,dns,dhcp,samba,ldap,acl
----------------------------------------------------------------------------------
exim,postfix,devecon,spamassasing,webmail,nextcloud
----------------------------------------------------------------------------------
plesk,vestacp,bitrix,wordpre,joomla,Opencart,СMS Magento,ImageCMS,Drupal,cpanel
----------------------------------------------------------------------------------
file sistems,fdisk,lvm,zfs,ext4,mount,fstab,nfs,ntpd,raid_0_60
----------------------------------------------------------------------------------
yum,apt,rpm,deb,curl,whois,dig,rsync,systemd,syslog
----------------------------------------------------------------------------------
juniper,microtik,cisco,net,resolv,hostname
----------------------------------------------------------------------------------
cloudlinux,xen
----------------------------------------------------------------------------------
fail2ban,firewald,iptables,ipfw,ipf,pf,ufw,windows firewall
----------------------------------------------------------------------------------
bash,git,docker,aws
----------------------------------------------------------------------------------
==================================================================================
----------------------------------------------------------------------------------
nginx,apache,h2o,mysql,proftpd,ssl,plesk,bitrix,vesta
----------------------------------------------------------------------------------
dns,fail2ban,firewald,iptables,selinux,php5.4_7,alternatives,update-alternatives
----------------------------------------------------------------------------------
cloudlinux
----------------------------------------------------------------------------------
juniper(lasp,trunc,vlan),microtik(l2tp,lasp)
----------------------------------------------------------------------------------
exim,postfix,devecon,spamassasing,nextcloud
----------------------------------------------------------------------------------
==================================================================================
